# Names the Github action
name: CI with SonarCloud

# What branches are we operating on and what are the triggers
on: 
    push: 
        branches: ["main"]
    pull_request:
        branches: ["main"]
        types: [opened, synchronize, reopened]
    workflow_dispatch:

# After this triggers, what are the things we need to do        
jobs:

    # name for the job--if there are multiple jobs
    sonar-analysis: 
        runs-on: windows-latest

        steps:
            - name: checkout github repository
              uses: actions/checkout@v4.1.5
              with:
                fetch-depth: 0
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                java-version: 17
                distributuion: 'zulu'
            - name: Cache SonarCloud Packages
              uses: actions/cache@v3
              with:
                path: ~\sonar\cache
                key: ${{ runner.os }}-sonar
                restore-keys: ${{ runner.os }}-sonar
            - name: Cache SonarCloud scanner
              id: cache-sonar-scanner
              uses: actions/cache@v3
              with:
                path: .\.sonar\scanner
                key: ${{ runner.os }}-sonar-scanner
                restore-keys: ${{ runner.os }}-sonar-scanner
            - name: Install SonarCloud scanner
              if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
              shell: powershell
              run: |
                New-Item -Path .\.sonar\scanner -ItemType Directory
                dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
            - name: Test
              env:
                  WORKING_DIR: WOD.Tests
              run: dotnet test ${{env.WORKING_DIR}} --collect:"XPlat Code Coverage" --logger trx -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
            - name: Build and analyze
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                WORKING_DIRECTORY: WOD.API
              shell: powershell
              run: |
                .\.sonar\scanner\dotnet-sonarscanner begin /k:"ZekkanProject_WOD_Backend" /o:"zekkanproject" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
                dotnet build ${{env.WORKING_DIRECTORY}}
                .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"